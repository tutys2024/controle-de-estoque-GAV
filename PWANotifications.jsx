import { useState } from 'react';\nimport { Download, X, Wifi, WifiOff, RefreshCw, Bell } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { usePWA } from '../hooks/usePWA';\n\nconst PWANotifications = () => {\n  const {\n    canInstall,\n    isInstalled,\n    isOnline,\n    updateAvailable,\n    installPWA,\n    updatePWA,\n    requestNotificationPermission,\n    getInstallInstructions\n  } = usePWA();\n\n  const [showInstallCard, setShowInstallCard] = useState(false);\n  const [installing, setInstalling] = useState(false);\n  const [updating, setUpdating] = useState(false);\n\n  const handleInstall = async () => {\n    setInstalling(true);\n    try {\n      const success = await installPWA();\n      if (success) {\n        setShowInstallCard(false);\n      }\n    } catch (error) {\n      console.error('Erro ao instalar:', error);\n    } finally {\n      setInstalling(false);\n    }\n  };\n\n  const handleUpdate = async () => {\n    setUpdating(true);\n    try {\n      await updatePWA();\n    } catch (error) {\n      console.error('Erro ao atualizar:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  const handleRequestNotifications = async () => {\n    const granted = await requestNotificationPermission();\n    if (granted) {\n      console.log('Permissão de notificação concedida');\n    }\n  };\n\n  const installInstructions = getInstallInstructions();\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2 max-w-sm\">\n      {/* Status de Conexão */}\n      {!isOnline && (\n        <Alert className=\"bg-yellow-50 border-yellow-200\">\n          <WifiOff className=\"h-4 w-4\" />\n          <AlertDescription className=\"flex items-center justify-between\">\n            <span>Você está offline</span>\n            <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">\n              Modo Offline\n            </Badge>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Atualização Disponível */}\n      {updateAvailable && (\n        <Alert className=\"bg-blue-50 border-blue-200\">\n          <RefreshCw className=\"h-4 w-4\" />\n          <AlertDescription>\n            <div className=\"flex items-center justify-between\">\n              <span>Nova versão disponível</span>\n              <Button \n                size=\"sm\" \n                onClick={handleUpdate}\n                disabled={updating}\n              >\n                {updating ? 'Atualizando...' : 'Atualizar'}\n              </Button>\n            </div>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Instalação PWA */}\n      {canInstall && !isInstalled && (\n        <Card className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n          <CardHeader className=\"pb-2\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Download className=\"h-5 w-5 text-blue-600\" />\n                <CardTitle className=\"text-sm\">Instalar App</CardTitle>\n              </div>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => setShowInstallCard(false)}\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            <CardDescription className=\"text-xs mb-3\">\n              Instale o app para acesso rápido e uso offline\n            </CardDescription>\n            <div className=\"flex space-x-2\">\n              <Button \n                size=\"sm\" \n                onClick={handleInstall}\n                disabled={installing}\n                className=\"flex-1\"\n              >\n                {installing ? 'Instalando...' : 'Instalar'}\n              </Button>\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setShowInstallCard(true)}\n              >\n                Ajuda\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Card de Instruções de Instalação */}\n      {showInstallCard && (\n        <Card className=\"bg-white border-gray-200 shadow-lg\">\n          <CardHeader className=\"pb-2\">\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"text-sm\">Como Instalar</CardTitle>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => setShowInstallCard(false)}\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            <div className=\"space-y-2\">\n              <p className=\"text-xs font-medium text-gray-700\">\n                {installInstructions.browser}:\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                {installInstructions.instructions}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Status de App Instalado */}\n      {isInstalled && (\n        <Alert className=\"bg-green-50 border-green-200\">\n          <Download className=\"h-4 w-4\" />\n          <AlertDescription className=\"flex items-center justify-between\">\n            <span>App instalado</span>\n            <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n              PWA Ativo\n            </Badge>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Permissão de Notificações */}\n      {isInstalled && Notification.permission === 'default' && (\n        <Alert className=\"bg-purple-50 border-purple-200\">\n          <Bell className=\"h-4 w-4\" />\n          <AlertDescription>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs\">Ativar notificações?</span>\n              <Button \n                size=\"sm\" \n                variant=\"outline\"\n                onClick={handleRequestNotifications}\n              >\n                Ativar\n              </Button>\n            </div>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Status Online */}\n      {isOnline && (\n        <div className=\"flex justify-end\">\n          <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800 text-xs\">\n            <Wifi className=\"h-3 w-3 mr-1\" />\n            Online\n          </Badge>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PWANotifications;

